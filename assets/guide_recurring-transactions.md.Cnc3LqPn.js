import{_ as r,c as i,o as t,ae as a}from"./chunks/framework.Q0oZKCXt.js";const n="/penny-fincher/images/recurring-transaction-form.png",p=JSON.parse('{"title":"Recurring Transactions","description":"","frontmatter":{},"headers":[],"relativePath":"guide/recurring-transactions.md","filePath":"guide/recurring-transactions.md"}'),s={name:"guide/recurring-transactions.md"};function o(c,e,l,u,d,h){return t(),i("div",null,e[0]||(e[0]=[a('<h1 id="recurring-transactions" tabindex="-1">Recurring Transactions <a class="header-anchor" href="#recurring-transactions" aria-label="Permalink to &quot;Recurring Transactions&quot;">​</a></h1><p>PennyFincher makes it easy to manage recurring expenses like subscriptions, monthly bills, and regular payments. This feature helps you stay on top of predictable expenses and ensures they&#39;re properly tracked in your financial records.</p><h2 id="getting-started-with-recurring-transactions" tabindex="-1">Getting Started with Recurring Transactions <a class="header-anchor" href="#getting-started-with-recurring-transactions" aria-label="Permalink to &quot;Getting Started with Recurring Transactions&quot;">​</a></h2><p>Before you can use recurring transactions, you need to set up the <code>Recurring</code> sheet in your Google Sheets document:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> setup-recurring</span></span></code></pre></div><p>This command creates a new sheet named <code>Recurring</code> with the necessary columns to store recurring transaction templates.</p><h2 id="understanding-recurring-transactions" tabindex="-1">Understanding Recurring Transactions <a class="header-anchor" href="#understanding-recurring-transactions" aria-label="Permalink to &quot;Understanding Recurring Transactions&quot;">​</a></h2><p>A recurring transaction is a template that defines a transaction that occurs at regular intervals. Unlike regular transactions, recurring transactions have additional properties:</p><ul><li><strong>Frequency</strong>: How often the transaction occurs (daily, weekly, biweekly, monthly, quarterly, or yearly)</li><li><strong>Start Date</strong>: When the recurring transaction begins</li><li><strong>End Date</strong> (optional): When the recurring transaction ends</li><li><strong>Day of Month/Week</strong>: Specific day when the transaction occurs</li><li><strong>Active Status</strong>: Whether the recurring transaction is currently active</li></ul><h2 id="adding-a-recurring-transaction" tabindex="-1">Adding a Recurring Transaction <a class="header-anchor" href="#adding-a-recurring-transaction" aria-label="Permalink to &quot;Adding a Recurring Transaction&quot;">​</a></h2><ol><li>Navigate to the Transactions page in PennyFincher</li><li>Scroll down to the &quot;Recurring Transactions&quot; section</li><li>Click the &quot;Add Recurring Transaction&quot; button</li><li>Fill in the details of your recurring transaction: <ul><li>Description (e.g., &quot;Netflix Subscription&quot;, &quot;Rent Payment&quot;)</li><li>Account</li><li>Frequency</li><li>Start Date</li><li>Day of Month/Week (depending on frequency)</li><li>End Date (optional)</li><li>Category and Subcategory (optional)</li><li>Amount in EUR or USD</li><li>Notes (optional)</li></ul></li><li>Review the &quot;Next occurrences&quot; preview to confirm the pattern is correct</li><li>Click &quot;Add Recurring Transaction&quot;</li></ol><p><img src="'+n+'" alt="Recurring Transaction Form"></p><h2 id="managing-recurring-transactions" tabindex="-1">Managing Recurring Transactions <a class="header-anchor" href="#managing-recurring-transactions" aria-label="Permalink to &quot;Managing Recurring Transactions&quot;">​</a></h2><p>The Recurring Transactions section displays all your recurring transaction templates, including:</p><ul><li>Description</li><li>Frequency</li><li>Next due date</li><li>Amount</li><li>Category</li><li>Account</li><li>Status (Active/Inactive)</li></ul><h3 id="processing-due-transactions" tabindex="-1">Processing Due Transactions <a class="header-anchor" href="#processing-due-transactions" aria-label="Permalink to &quot;Processing Due Transactions&quot;">​</a></h3><p>When a recurring transaction is due (based on its frequency and start date), you can generate an actual transaction from it:</p><ol><li>Click the &quot;Process Due Transactions&quot; button</li><li>PennyFincher will: <ul><li>Check which recurring transactions are due</li><li>Create actual transactions for them in the Transactions sheet</li><li>Update the &quot;Last Processed&quot; date for each processed recurring transaction</li><li>Calculate the next due date</li></ul></li></ol><h3 id="enabling-disabling-recurring-transactions" tabindex="-1">Enabling/Disabling Recurring Transactions <a class="header-anchor" href="#enabling-disabling-recurring-transactions" aria-label="Permalink to &quot;Enabling/Disabling Recurring Transactions&quot;">​</a></h3><p>You can temporarily disable a recurring transaction without deleting it:</p><ol><li>Find the recurring transaction in the list</li><li>Click the &quot;Disable&quot; button (or &quot;Enable&quot; if it&#39;s currently disabled)</li><li>The status will change, and disabled recurring transactions won&#39;t be processed</li></ol><h2 id="how-recurring-transactions-work" tabindex="-1">How Recurring Transactions Work <a class="header-anchor" href="#how-recurring-transactions-work" aria-label="Permalink to &quot;How Recurring Transactions Work&quot;">​</a></h2><p>When you process recurring transactions, PennyFincher:</p><ol><li>Identifies which recurring transactions are due based on their next due date</li><li>Creates a new transaction in the Transactions sheet with the details from the template</li><li>Adds a reference to the recurring transaction ID in the notes</li><li>Updates the &quot;Last Processed&quot; date in the Recurring sheet</li><li>Calculates the next due date based on the frequency</li></ol><h2 id="supported-frequencies" tabindex="-1">Supported Frequencies <a class="header-anchor" href="#supported-frequencies" aria-label="Permalink to &quot;Supported Frequencies&quot;">​</a></h2><p>PennyFincher supports these recurring transaction frequencies:</p><ul><li><strong>Daily</strong>: Occurs every day</li><li><strong>Weekly</strong>: Occurs every week on a specific day (e.g., every Monday)</li><li><strong>Biweekly</strong>: Occurs every two weeks on a specific day</li><li><strong>Monthly</strong>: Occurs every month on a specific day (e.g., 15th of each month)</li><li><strong>Quarterly</strong>: Occurs every three months on a specific day</li><li><strong>Yearly</strong>: Occurs once a year on a specific day</li></ul><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><ul><li>Set up recurring transactions for regular expenses like rent, mortgage, subscriptions, and utilities</li><li>Process due transactions regularly (at least weekly) to stay up-to-date</li><li>Use descriptive names for your recurring transactions</li><li>Add notes to differentiate similar recurring transactions</li><li>Disable, rather than delete, recurring transactions that are temporarily paused</li></ul><h2 id="example-use-cases" tabindex="-1">Example Use Cases <a class="header-anchor" href="#example-use-cases" aria-label="Permalink to &quot;Example Use Cases&quot;">​</a></h2><ul><li>Monthly rent or mortgage payments</li><li>Subscription services (Netflix, Spotify, gym memberships)</li><li>Insurance premiums (monthly, quarterly, or yearly)</li><li>Utility bills (electricity, water, internet)</li><li>Loan or credit card payments</li><li>Regular savings or investments</li><li>Membership dues or fees</li></ul>',31)]))}const y=r(s,[["render",o]]);export{p as __pageData,y as default};
